/*3. Длинное вещественное число

	Вы решили разработать программу-калькулятор, которая складывает числа сколь угодно большой длины. Для этого вы
планируете работать с ними как со строками. Первая проблема, с которой вы столкнулись, — по данной строке нужно понять,
является она корректной записью вещественного числа или нет.
  Корректной записью считается запись, удовлетворяющая следующим условиям. Первым символом в ней должна быть либо цифра,
либо знак минус. После этого может идти еще несколько цифр (возможно, ни одной). Затем может идти точка, отделяющая
целую часть от дробной. До точки может и не быть цифр. В таком случае считается, что до точки стоит 0. После точки еще
несколько цифр (возможно, ни одной). Хотя бы одна цифра в записи числа должна присутствовать. (Для простоты в этой
задаче мы не будем рассматривать числа в экспоненциальной записи, такие как 1.2e-3.)
  Напишите программу, которая получает от пользователя строку и выводит в ответ Yes, если эта строка корректно задает
вещественное число, в противном случае выводит No.

Примеры корректных записей:
0123
00.000
.15
165.
999999999999999999999999999999999.999999999999999999999
-1.0
-.35

Примеры некорректных записей:
1.2.3 (десятичная точка может быть только одна)
-. (должна быть хотя бы одна цифра в записи)
11e-3 (мы не разрешаем использовать символ e в записи)
+25 (мы не разрешаем использовать символ + в записи)*/

#include <iostream>

int main() {
  std::string number;
  std::cout << "Input string of numbers: ";
  std::cin >> number;
  bool num = false, denialCheck = false;
  if (number[0]=='-' || (number[0] - '0' >= 0 && number[0] - '0' <= 9) || number[0]=='.') {
	bool dot = false;
	for (int i = 0; i < number.length(); i++) {
	  if (number[i] - '0' >= 0 && number[i] - '0' < 10) num = true;
	  else if (number[0]=='-'){}
	  else if (number[i]=='.' && !dot) dot = true;
	  else {
		std::cout << "No!";
		denialCheck=true;
		break;
	  }
	}
	if (!denialCheck&&num) std::cout << "Yes!";
  } else {
	std::cout << "No!";
  }
  return 0;
}
